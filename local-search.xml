<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>json—C</title>
    <link href="/2023/02/26/json-c/"/>
    <url>/2023/02/26/json-c/</url>
    
    <content type="html"><![CDATA[<h1 id="json"><a href="#json" class="headerlink" title="json"></a>json</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在GitHub上找来练手的项目</p><p>在这里记录一下自己的路上遇到的难点和知识吧</p><h2 id="01"><a href="#01" class="headerlink" title="01"></a>01</h2><h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">#define EXPECT_EQ_BASE(equality, <span class="hljs-keyword">expect</span>, <span class="hljs-keyword">actual</span>, format) \<br>    <span class="hljs-keyword">do</span> &#123;\<br>        test_count++;\<br>        <span class="hljs-keyword">if</span> (equality)\<br>            test_pass++;\<br>        <span class="hljs-keyword">else</span> &#123;\<br>            fprintf(stderr, <span class="hljs-string">&quot;%s:%d: expect: &quot;</span> format <span class="hljs-string">&quot; actual: &quot;</span> format <span class="hljs-string">&quot;\n&quot;</span>, __FILE__, __LINE__, <span class="hljs-keyword">expect</span>, <span class="hljs-keyword">actual</span>);\<br>            main_ret = <span class="hljs-number">1</span>;\<br>        &#125;\<br>    &#125; <span class="hljs-keyword">while</span>(<span class="hljs-number">0</span>)<br><br>#define EXPECT_EQ_INT(<span class="hljs-keyword">expect</span>, <span class="hljs-keyword">actual</span>) EXPECT_EQ_BASE((<span class="hljs-keyword">expect</span>) == (<span class="hljs-keyword">actual</span>), <span class="hljs-keyword">expect</span>, <span class="hljs-keyword">actual</span>, <span class="hljs-string">&quot;%d&quot;</span>)<br></code></pre></td></tr></table></figure><p>简单例子</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">static void test<span class="hljs-constructor">_parse_null()</span> &#123;<br>    lept_value v;<br>    v.<span class="hljs-keyword">type</span> = LEPT_FALSE;<br>    <span class="hljs-constructor">EXPECT_EQ_INT(LEPT_PARSE_OK, <span class="hljs-params">lept_parse</span>(&amp;<span class="hljs-params">v</span>, <span class="hljs-string">&quot;null&quot;</span>)</span>);<br>    <span class="hljs-constructor">EXPECT_EQ_INT(LEPT_NULL, <span class="hljs-params">lept_get_type</span>(&amp;<span class="hljs-params">v</span>)</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="02"><a href="#02" class="headerlink" title="02"></a>02</h2><h3 id="简化单元测试"><a href="#简化单元测试" class="headerlink" title="简化单元测试"></a>简化单元测试</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">#define <span class="hljs-constructor">TEST_ERROR(<span class="hljs-params">error</span>, <span class="hljs-params">json</span>)</span>\<br>    <span class="hljs-keyword">do</span> &#123;\<br>        lept_value v;\<br>        v.<span class="hljs-keyword">type</span> = LEPT_FALSE;\<br>        <span class="hljs-constructor">EXPECT_EQ_INT(<span class="hljs-params">error</span>, <span class="hljs-params">lept_parse</span>(&amp;<span class="hljs-params">v</span>, <span class="hljs-params">json</span>)</span>);\<br>        <span class="hljs-constructor">EXPECT_EQ_INT(LEPT_NULL, <span class="hljs-params">lept_get_type</span>(&amp;<span class="hljs-params">v</span>)</span>);\<br>    &#125; <span class="hljs-keyword">while</span>(<span class="hljs-number">0</span>)<br><br>static void test<span class="hljs-constructor">_parse_expect_value()</span> &#123;<br>    <span class="hljs-constructor">TEST_ERROR(LEPT_PARSE_EXPECT_VALUE, <span class="hljs-string">&quot;&quot;</span>)</span>;<br>    <span class="hljs-constructor">TEST_ERROR(LEPT_PARSE_EXPECT_VALUE, <span class="hljs-string">&quot; &quot;</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>C</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo使用手册</title>
    <link href="/2023/02/25/hexo-shi-yong-shou-ce/"/>
    <url>/2023/02/25/hexo-shi-yong-shou-ce/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>博弈论</title>
    <link href="/2023/02/25/bo-yi-lun/"/>
    <url>/2023/02/25/bo-yi-lun/</url>
    
    <content type="html"><![CDATA[<h1 id="博弈论"><a href="#博弈论" class="headerlink" title="博弈论"></a>博弈论</h1><h2 id="sg函数-Sprague-Garundy"><a href="#sg函数-Sprague-Garundy" class="headerlink" title="sg函数(Sprague-Garundy)"></a>sg函数(Sprague-Garundy)</h2><h3 id="如何求"><a href="#如何求" class="headerlink" title="如何求"></a>如何求</h3><p>要弄明白sg函数首先要明白什么是 必败态 N-position(g(x)一般是 mex{})</p><p>对于一个g(x)=0的顶点x，它的所有后继y都满足g(y)!=0。 N</p><p>对于一个g(x)!=0的顶点，必定存在一个后继y满足g(y)=0。 P</p><p>比如定义一个游戏</p><p>有一堆石头个数 为n 两人轮流可以 1~3个</p><p>直到不能取的人失败</p><p>当n==0时必败 或者说n%4==0时都是必败的</p><p><img src="/2023/02/25/bo-yi-lun/sg%E5%87%BD%E6%95%B0.jpg" alt="sg函数"></p><p>有向无环图上面定义一个sg函数的</p><p>从小到大标记 sg函数</p><p>x  0  1  2  3  4  5  6  7  8  9  10  11<br>g(x)  0  1  2  3  0  1  2  3  0  1  2  3 ]</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//打表</span><br><span class="line">int f[N],sg[N],hash[N];     </span><br><span class="line">void getSG(int n)</span><br><span class="line">&#123;</span><br><span class="line">    bitset&lt;N&gt;vis;</span><br><span class="line">   vector&lt;int&gt;sg(n+1);</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      vis.reset();</span><br><span class="line">        for(int j=1;f[j]&lt;=i;j++)</span><br><span class="line">            vis[sg[i-f[j]]]=1;//f[i]为实现方法</span><br><span class="line">       while(vis[sg[i]])   //求mes&#123;&#125;中未出现的最小的非负整数</span><br><span class="line">       sg[i]++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">//dfs</span><br><span class="line">int s[110],sg[10010],n;</span><br><span class="line">int SG_dfs(int x)</span><br><span class="line">&#123;</span><br><span class="line">    if(sg[x]!=-1)</span><br><span class="line">        return sg[x];</span><br><span class="line">    bool vis[110];</span><br><span class="line">    memset(vis,0,sizeof(vis));</span><br><span class="line">    for(int i=0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(x&gt;=s[i])</span><br><span class="line">        &#123;</span><br><span class="line">            SG_dfs(x-s[i]);</span><br><span class="line">            vis[sg[x-s[i]]]=1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    int e;</span><br><span class="line">    for(i=0;;i++)</span><br><span class="line">        if(!vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            e=i;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    return sg[x]=e;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="SG定理"><a href="#SG定理" class="headerlink" title="SG定理"></a>SG定理</h2><h3 id="nim"><a href="#nim" class="headerlink" title="nim"></a>nim</h3><p>经典nim博弈嗷</p><p>如果有n个游戏的话</p><p>总游戏 的sg值 为 </p><p><img src="/../%E5%8D%9A%E5%BC%88%E8%AE%BA.assets/image-20220219123412894.png" alt="image-20220219123412894"></p><p>大概就是这样子啦</p><h3 id="阶梯nim博弈"><a href="#阶梯nim博弈" class="headerlink" title="阶梯nim博弈"></a>阶梯nim博弈</h3><p><img src="D:\c语言\题目\杂题\图片\image-20220219192045720.png" alt="image-20220219192045720"></p><p><strong>对奇数阶的石头进行 Nim，偶数阶的石头对结果不影响。</strong></p><p>为什么是奇数阶？</p><p><strong>因为最后石子都要到 0 上，从 1 到 0 就是最后一步，这是从奇数阶到偶数阶，</strong></p><p><strong>所以认为从奇数阶上移到偶数阶上相当于取一次石子才能保证状态一致。</strong></p><h2 id="寒冬信使2"><a href="#寒冬信使2" class="headerlink" title=" 寒冬信使2"></a><a href="https://ac.nowcoder.com/acm/contest/23481/H"> 寒冬信使2</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>有长度为n 的只含 b 和w 的字符串(&lt;=10)</p><p>现有 两个操作</p><p><img src="D:\c语言\题目\杂题\图片\image-20220219143115738.png" alt="image-20220219143115738"></p><p>不能操作的人先输掉</p><p>问是否有必胜策略</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>将 w 看成1 b看出0</p><p>然后打表 sg函数 (1~1&lt;&lt;10)应该很小</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">#define endl &quot;\n&quot;</span><br><span class="line">#define pii pair&lt;int,int&gt;</span><br><span class="line">#define pll pair&lt;long long,long long&gt;</span><br><span class="line">#define fi first</span><br><span class="line">#define sc second</span><br><span class="line">#define int128 __int128</span><br><span class="line">typedef long long ll;</span><br><span class="line">const double PI = acos(-1.0), eps = 1e-8, EI = exp(1.0);</span><br><span class="line">const int inf32 = 0x3f3f3f3f;</span><br><span class="line">const ll mod = 1000000007, inf64 = 0x3f3f3f3f3f3f3f3f;</span><br><span class="line">const int N = 1e7 + 50, maxn = 1e6 + 50;</span><br><span class="line">using namespace std;</span><br><span class="line">void solve()</span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;int&gt;sg(1&lt;&lt;10+1);</span><br><span class="line">    bitset&lt;105&gt;vis;</span><br><span class="line">    for (int i = 1; i &lt; (1 &lt;&lt; 10); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        vis.reset();</span><br><span class="line">        for (int j = 0; j &lt; 10; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if (i &gt;&gt; j &amp; 1)</span><br><span class="line">            &#123;</span><br><span class="line">                if (j == 0)</span><br><span class="line">                    vis[sg[i ^ (1 &lt;&lt; j)]] = true;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    for (int k = 0; k &lt; j; k++)</span><br><span class="line">                        vis[sg[i ^ (1 &lt;&lt; j) ^ (1 &lt;&lt; k)]] = true;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        while (vis[sg[i]])</span><br><span class="line">        &#123;</span><br><span class="line">            sg[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    int t; cin &gt;&gt; t;</span><br><span class="line">    while (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        int n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string str;</span><br><span class="line">        cin &gt;&gt; str;</span><br><span class="line">        int st = 0;</span><br><span class="line">        for (int i = 0; i &lt;n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if (str[i] == &#x27;w&#x27;)</span><br><span class="line">            &#123;</span><br><span class="line">                st|= (1 &lt;&lt; i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (sg[st])</span><br><span class="line">            cout &lt;&lt; &quot;Yes&quot; &lt;&lt; endl;</span><br><span class="line">        else</span><br><span class="line">            cout &lt;&lt; &quot;No&quot; &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    ios_base::sync_with_stdio(false);</span><br><span class="line">    cin.tie(); cout.tie(0);</span><br><span class="line">    //int t; cin &gt;&gt; t; while (t--)</span><br><span class="line">    solve();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高手过招"><a href="#高手过招" class="headerlink" title="高手过招"></a>高手过招</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>有个 20*n  的棋盘</p><p>每行 有mi个棋子</p><p>可以进行以下操作</p><p>对于一个棋子，能将它向右移动一格，如果右边有棋子，则向右跳到第一个空格，如果右边没有空格，则不能移动这个棋子，如果所有棋子都不能移动，那么将输掉这场比赛。</p><h3 id="思路1"><a href="#思路1" class="headerlink" title="思路1"></a>思路1</h3><p>用st打表 1&lt;&lt;20 大概 1e7左右 </p><h3 id="AC代码1"><a href="#AC代码1" class="headerlink" title="AC代码1"></a>AC代码1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">#define endl &quot;\n&quot;</span><br><span class="line">#define pii pair&lt;int,int&gt;</span><br><span class="line">#define pll pair&lt;long long,long long&gt;</span><br><span class="line">#define fi first</span><br><span class="line">#define sc second</span><br><span class="line">#define int128 __int128</span><br><span class="line">typedef long long ll;</span><br><span class="line">const double PI = acos(-1.0), eps = 1e-8, EI = exp(1.0);</span><br><span class="line">const int inf32 = 0x3f3f3f3f;</span><br><span class="line">const ll mod = 1000000007, inf64 = 0x3f3f3f3f3f3f3f3f;</span><br><span class="line">const int N = 1e7 + 50, maxn = 1e6 + 50;</span><br><span class="line">using namespace std;</span><br><span class="line">vector&lt;int&gt;sg(1 &lt;&lt; 20);</span><br><span class="line">bitset&lt;105&gt;vis;</span><br><span class="line">void fun(int x)</span><br><span class="line">&#123;</span><br><span class="line">        vis.reset();</span><br><span class="line">        int temp = 1, nxt = -1;</span><br><span class="line">        for (int i = 0; i &lt; 20; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            temp = 1 &lt;&lt; i;</span><br><span class="line">            if (x &amp; temp)</span><br><span class="line">            &#123;</span><br><span class="line">                if ((x | (temp &gt;&gt; 1)) != x)</span><br><span class="line">                    vis[sg[x ^ temp ^ (temp &gt;&gt; 1)]] = true;</span><br><span class="line">                else if (nxt!=-1)</span><br><span class="line">                    vis[sg[x ^ temp ^ (1 &lt;&lt; (nxt))]] = true;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">                nxt = i;</span><br><span class="line">        &#125;</span><br><span class="line">        while (vis[sg[x]])</span><br><span class="line">        &#123;</span><br><span class="line">            sg[x]++;</span><br><span class="line">        &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line">void solve()</span><br><span class="line">&#123;</span><br><span class="line">    int n, m;</span><br><span class="line">    cin &gt;&gt; n ;</span><br><span class="line">    int st = 0;</span><br><span class="line">    int ans = 0;</span><br><span class="line">    while (n--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; m;</span><br><span class="line">        st = 0;</span><br><span class="line">        for (int i = 1; i &lt;= m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            int x;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            st|=(1 &lt;&lt; (20 - x));</span><br><span class="line">        &#125;</span><br><span class="line">        ans ^= sg[st];</span><br><span class="line">    &#125;</span><br><span class="line">    if (ans)</span><br><span class="line">        cout &lt;&lt; &quot;YES&quot; &lt;&lt; endl;</span><br><span class="line">    else</span><br><span class="line">        cout &lt;&lt; &quot;NO&quot; &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    ios_base::sync_with_stdio(false);</span><br><span class="line">    cin.tie(); cout.tie(0);</span><br><span class="line">    for(int i=0;i&lt;(1&lt;&lt;20);i++)</span><br><span class="line">        fun(i);</span><br><span class="line">    int t; cin &gt;&gt; t; while (t--)</span><br><span class="line">    solve();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="思路2"><a href="#思路2" class="headerlink" title="思路2"></a>思路2</h3><p>变形 的阶梯nim 博弈( )</p><p>将相互连接的棋子看作一个阶梯的</p><p>在 第21个格子加上一个棋子</p><p>进行 阶梯nim 博弈</p>]]></content>
    
    
    
    <tags>
      
      <tag>ACM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>开机自连宽带</title>
    <link href="/2023/02/25/kai-ji-zi-lian-kuan-dai/"/>
    <url>/2023/02/25/kai-ji-zi-lian-kuan-dai/</url>
    
    <content type="html"><![CDATA[<h1 id="开机自动连接宽带以及启动随e行"><a href="#开机自动连接宽带以及启动随e行" class="headerlink" title="开机自动连接宽带以及启动随e行"></a>开机自动连接宽带以及启动随e行</h1><h3 id="连接宽带"><a href="#连接宽带" class="headerlink" title="连接宽带"></a>连接宽带</h3><p>可以在cmd中使用可以连接宽带</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rasdial [宽带名称] [用户名] [密码]</span><br></pre></td></tr></table></figure><h3 id="获取随e行的句柄"><a href="#获取随e行的句柄" class="headerlink" title="获取随e行的句柄"></a>获取随e行的句柄</h3><p>使用Spy++获取软件的句柄</p><p><img src="/../../pic/spyxx.png" alt="spy++"></p><p><img src="/../../pic/spyxx2.png" alt="spy++2"></p><p>之后用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hwnd=win32gui.FindWindow(None, FrameTitle)</span><br></pre></td></tr></table></figure><p>参数1 是类</p><p>参数2 是标题</p><p>这边只用标题找就行（随e行的类会变）</p><h3 id="任务计划程序"><a href="#任务计划程序" class="headerlink" title="任务计划程序"></a>任务计划程序</h3><p><img src="/../../pic/%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E8%AE%A1%E5%88%92.png" alt="image-20230214175153874"></p><p>编写一个bat程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">if &quot;%1&quot; == &quot;h&quot; goto begin</span><br><span class="line">mshta vbscript:createobject(&quot;wscript.shell&quot;).run(&quot;&quot;&quot;%~0&quot;&quot; h&quot;,0)(window.close)&amp;&amp;exit</span><br><span class="line">:begin</span><br><span class="line">python &quot;D:\py_test\automatic.py&quot;</span><br></pre></td></tr></table></figure><p>让其开机启动 注意要使用最高权限运行</p><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">from __future__ import print_function</span><br><span class="line">import pyautogui</span><br><span class="line">import win32con</span><br><span class="line">import win32gui</span><br><span class="line">import os</span><br><span class="line">from pynput.mouse import Button, Controller</span><br><span class="line">import ctypes, sys</span><br><span class="line">import time</span><br><span class="line">#宽带名称 宽带账号 密码</span><br><span class="line">g_adsl_account=&#123;</span><br><span class="line">    &quot;name&quot;:&quot;ZJGSU&quot;,</span><br><span class="line">    &quot;username&quot;:&quot;2012190228&quot;,</span><br><span class="line">    &quot;password&quot;:&quot;123456&quot;&#125;</span><br><span class="line">    </span><br><span class="line">app_path=r&quot;C:\Program Files (x86)\cmclient\bin\CMClient.exe&quot; </span><br><span class="line"></span><br><span class="line">class Adsl(object): </span><br><span class="line">    # 初始化</span><br><span class="line">    def __init__(self,object):</span><br><span class="line">        self.name=object[&quot;name&quot;]</span><br><span class="line">        self.username=object[&quot;username&quot;]</span><br><span class="line">        self.password=object[&quot;password&quot;]</span><br><span class="line">    # 修改基本信息</span><br><span class="line">    def set_adsl(self, account):</span><br><span class="line">        self.name=account[&quot;name&quot;]</span><br><span class="line">        self.username=account[&quot;username&quot;]</span><br><span class="line">        self.password=account[&quot;password&quot;]</span><br><span class="line">    # 连接</span><br><span class="line">    def connect(self):</span><br><span class="line">        cmd_str=&quot;rasdial %s %s %s&quot;%(self.name,self.username,self.password)</span><br><span class="line">        os.system(cmd_str)</span><br><span class="line">    #</span><br><span class="line">    def disconnect(self):</span><br><span class="line">        cmd_str=&quot;rasdial %s /disconnect&quot;%self.name</span><br><span class="line">        os.system(cmd_str)</span><br><span class="line">    def reconnect(self):</span><br><span class="line">        self.disconnect()</span><br><span class="line">        self.connect()</span><br><span class="line">def open_app(app_dir):</span><br><span class="line">  os.startfile(app_dir)</span><br><span class="line">def is_admin():</span><br><span class="line">    try:</span><br><span class="line">        return ctypes.windll.shell32.IsUserAnAdmin()</span><br><span class="line">    except:</span><br><span class="line">        return False</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    auto=Adsl(g_adsl_account)</span><br><span class="line">    auto.connect()</span><br><span class="line">    #判断是否是管理员权限</span><br><span class="line">    if is_admin():</span><br><span class="line">        open_app(app_dir=app_path)</span><br><span class="line">    else:</span><br><span class="line">        if sys.version_info[0] == 3:</span><br><span class="line">            ctypes.windll.shell32.ShellExecuteW(None, &quot;runas&quot;, sys.executable, __file__, None, 1)</span><br><span class="line">        else:  # in python2.x</span><br><span class="line">            ctypes.windll.shell32.ShellExecuteW(None, u&quot;runas&quot;, unicode(sys.executable), unicode(__file__), None, 1)</span><br><span class="line">    time.sleep(2)</span><br><span class="line">    #移动鼠标的位置</span><br><span class="line">    pyautogui.moveTo(1120, 508)</span><br><span class="line">    pyautogui.click(clicks=1)</span><br><span class="line">    FrameTitle=&quot;随e行&quot;</span><br><span class="line">    hwnd=win32gui.FindWindow(None, FrameTitle)</span><br><span class="line">    win32gui.ShowWindow(hwnd, win32con.SW_HIDE)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>莫队算法（离线查询）</title>
    <link href="/2022/02/20/mo-dui-suan-fa-chi-xian-cha-xun/"/>
    <url>/2022/02/20/mo-dui-suan-fa-chi-xian-cha-xun/</url>
    
    <content type="html"><![CDATA[<h1 id="莫队算法-离线查询"><a href="#莫队算法-离线查询" class="headerlink" title="莫队算法(离线查询)"></a>莫队算法(离线查询)</h1><h2 id="SP3267-DQUERY-D-query"><a href="#SP3267-DQUERY-D-query" class="headerlink" title="SP3267 DQUERY - D-query"></a>SP3267 DQUERY - D-query</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>有 n个数 m次查询</p><p>每次查询给出 范围 l 和 r</p><p>求 l ~r之间有多少不同的数</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>(其实线段树,树状数组都可以)莫队算法</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">#define endl &quot;\n&quot;</span><br><span class="line">#define INF 0x3f3f3f3f3f3f3f</span><br><span class="line">typedef long long ll;</span><br><span class="line">const ll mod = 998244353;</span><br><span class="line">const double PI = acos(-1.0);</span><br><span class="line">const double EI = exp(1.0);</span><br><span class="line">const int N = 1e6 + 50;</span><br><span class="line">const int maxn = 1e6+50;</span><br><span class="line">const double eps = 1e-8;</span><br><span class="line">using namespace std;</span><br><span class="line">struct query</span><br><span class="line">&#123;</span><br><span class="line">query() &#123;&#125;</span><br><span class="line">query(int l, int r, int id) :l(l), r(r), id(id) &#123;&#125;</span><br><span class="line">int l, r, id;</span><br><span class="line"></span><br><span class="line">&#125;q[maxn];</span><br><span class="line">int read() &#123;</span><br><span class="line">int res = 0;</span><br><span class="line">char c = getchar();</span><br><span class="line">while (!isdigit(c)) c = getchar();</span><br><span class="line">while (isdigit(c)) res = (res &lt;&lt; 1) + (res &lt;&lt; 3) + c - 48, c = getchar();</span><br><span class="line">return res;</span><br><span class="line">&#125;//快读</span><br><span class="line">void printi(int x) &#123;</span><br><span class="line">if (x / 10) printi(x / 10);</span><br><span class="line">putchar(x % 10 + &#x27;0&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">int a[maxn], cnt[N], ans[maxn], belong[maxn];</span><br><span class="line">bool cmp(query a, query b)//分块排序</span><br><span class="line">&#123;</span><br><span class="line">if (belong[a.l] ^ belong[b.l])</span><br><span class="line">&#123;</span><br><span class="line">return a.l &lt; b.l;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">if (belong[a.l] &amp; 1) //如果左端点在奇数块则按照右端点升序 反之相反</span><br><span class="line">&#123;</span><br><span class="line">return a.r &lt; b.r;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">return a.r &gt; b.r;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int add(int x)</span><br><span class="line">&#123;</span><br><span class="line">cnt[x]++;</span><br><span class="line">if (cnt[x] == 1)</span><br><span class="line">return 1;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">int del(int x)</span><br><span class="line">&#123;</span><br><span class="line">cnt[x]--;</span><br><span class="line">if (cnt[x] == 0)</span><br><span class="line">return -1;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">void init(int n)//分区</span><br><span class="line">&#123;</span><br><span class="line">int size = sqrt(n);</span><br><span class="line">int bnum = ceil(double(n) / size);</span><br><span class="line">for (int i = 1; i &lt;= bnum; i++)//</span><br><span class="line">&#123;</span><br><span class="line">for (int j = (i - 1) * size + 1; j &lt;= i * size; j++)</span><br><span class="line">&#123;</span><br><span class="line">belong[j] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void solve()</span><br><span class="line">&#123;</span><br><span class="line">int n, m;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">init(n);</span><br><span class="line">for (int i = 1; i &lt;= n; i++)</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line">for (int i = 1; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">int l, r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">q[i] = query(l, r, i);</span><br><span class="line">&#125;</span><br><span class="line">sort(q + 1, q + 1 + m, cmp);</span><br><span class="line">int l = 1, r = 0;</span><br><span class="line">int now = 0;</span><br><span class="line">for (int i = 1; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">int ql = q[i].l, qr = q[i].r;</span><br><span class="line">while (l &lt; ql) now += del(a[l++]);</span><br><span class="line">while (l &gt; ql) now += add(a[--l]);</span><br><span class="line">while (r &lt; qr) now += add(a[++r]);</span><br><span class="line">while (r &gt; qr) now += del(a[r--]);</span><br><span class="line">ans[q[i].id] = now;</span><br><span class="line">&#125;</span><br><span class="line">for (int i = 1; i &lt;= m; i++)</span><br><span class="line">cout &lt;&lt; ans[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">ios_base::sync_with_stdio(false);</span><br><span class="line">cin.tie(); cout.tie(0);</span><br><span class="line">//int t; cin &gt;&gt; t; while (t--)</span><br><span class="line">solve();</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>ACM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/01/30/hello-world/"/>
    <url>/2022/01/30/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
